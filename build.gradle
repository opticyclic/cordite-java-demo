buildscript {
  ext {
    corda_release_version = '4.6'
    corda_gradle_plugins_version = '5.0.12'
    accounts_release_version = '1.0.2'
    confidential_id_release_version = "1.0"
    quasar_version = '0.7.10'
    kotlin_version = '1.2.71'
    testng_version = '6.14.3'
    eaagentloader_version = '1.0.3'
  }

  repositories {
    jcenter()
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
    classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
  }
}

allprojects {
  repositories {
    jcenter()
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
    maven { url 'http://ci-artifactory.corda.r3cev.com/artifactory/corda-lib' }
    //Corda testing node-driver requires gradle-tooling-api
    maven { url 'https://repo.gradle.org/gradle/libs-releases-local/' }
    //Crash Shell dependencies are not published correctly in R3 repo
    maven { url 'https://jitpack.io' }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      languageVersion = "1.2"
      apiVersion = "1.2"
      jvmTarget = "1.8"
      javaParameters = true // Useful for reflection.
    }
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'

//The root project shouldn't be creating a jar of its own
jar.enabled = false

dependencies {
  cordaCompile "net.corda:corda-node-api:$corda_release_version"

  // CorDapp dependencies.
  cordapp project(":contracts")
  cordapp project(":workflows")
  cordapp "com.r3.corda.lib.accounts:accounts-contracts:$accounts_release_version"
  cordapp "com.r3.corda.lib.accounts:accounts-workflows:$accounts_release_version"
  cordapp "com.r3.corda.lib.ci:ci-workflows:$confidential_id_release_version"
}

subprojects {
  apply plugin: 'base'
  clean {
    delete 'bin'
    delete 'out'
    delete 'logs'
  }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
  nodeDefaults {
    projectCordapp {
      deploy = false
    }
    cordapp project(':contracts')
    cordapp project(':workflows')
    cordapp("com.r3.corda.lib.accounts:accounts-contracts:$accounts_release_version")
    cordapp("com.r3.corda.lib.accounts:accounts-workflows:$accounts_release_version")
    cordapp("com.r3.corda.lib.ci:ci-workflows:$confidential_id_release_version")
    rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    //Generate custom tables without having to create liquibase scripts
    //--allow-hibernate-to-manage-app-schema is not enough to create tables for accounts dependency
    runSchemaMigration = true
  }
  node {
    name "O=Notary,L=London,C=GB"
    notary = [validating: false]
    p2pPort 10001
    rpcSettings {
      address("localhost:10002")
      adminAddress("localhost:10003")
    }
    cordapps.clear()
  }
  node {
    name "O=Banks,L=London,C=GB"
    p2pPort 10004
    rpcSettings {
      address("localhost:10005")
      adminAddress("localhost:10006")
    }
  }
  node {
    name "O=Agents,L=London,C=GB"
    p2pPort 10007
    rpcSettings {
      address("localhost:10008")
      adminAddress("localhost:10009")
    }
  }
}
